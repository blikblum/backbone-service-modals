{"version":3,"file":"marionette.modalservice.esm.js","sources":["../src/service.js","../src/bootstrap-views.js","../src/bootstrap.js"],"sourcesContent":["import Service from 'radio.service'\r\nimport _ from 'underscore'\r\n\r\n/**\r\n * @class ModalService\r\n */\r\nconst ModalService = Service.extend({\r\n\r\n  /**\r\n   * @abstract\r\n   * @method requests\r\n   */\r\n  requests () {\r\n    return {\r\n      open: 'open',\r\n      close: 'close',\r\n      alert: 'alert',\r\n      confirm: 'confirm',\r\n      prompt: 'prompt',\r\n      dialog: 'dialog'\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @constructs ModalService\r\n   */\r\n  constructor () {\r\n    this.views = []\r\n\r\n    Service.prototype.constructor.apply(this, arguments)\r\n  },\r\n\r\n  /**\r\n   * @method open\r\n   * @param {Backbone.View} [view]\r\n   * @returns {Promise}\r\n   */\r\n  open (view, options) {\r\n    let previousView\r\n    return Promise.resolve().then(() => {\r\n      this.trigger('before:open', view, options)\r\n      this._isOpen = true\r\n\r\n      previousView = _.last(this.views)\r\n      this.views.push(view)\r\n\r\n      return this.render(view, options)\r\n    }).then(() => {\r\n      if (previousView) {\r\n        return this.animateSwap(previousView, view, options)\r\n      } else {\r\n        return this.animateIn(view, options)\r\n      }\r\n    }).then(() => {\r\n      this.trigger('open', view, options)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @method close\r\n   * @param {Backbone.View} [view]\r\n   * @returns {Promise}\r\n   */\r\n  close (view, options) {\r\n    let previousView\r\n    let views\r\n\r\n    return Promise.resolve().then(() => {\r\n      if (view) {\r\n        this.trigger('before:close', view, options)\r\n      } else {\r\n        _.map(this.views, view => this.trigger('before:close', view, options))\r\n      }\r\n\r\n      this._isOpen = false\r\n\r\n      if (view) {\r\n        views = this.views = _.without(this.views, view)\r\n      } else {\r\n        views = this.views\r\n        this.views = []\r\n      }\r\n\r\n      previousView = _.last(views)\r\n\r\n      if (view && previousView) {\r\n        return this.animateSwap(view, previousView, options)\r\n      } else if (view) {\r\n        return this.animateOut(view, options)\r\n      } else if (previousView) {\r\n        return this.animateOut(previousView, options)\r\n      }\r\n    }).then(() => {\r\n      if (view) {\r\n        return this.remove(view, options)\r\n      } else {\r\n        return Promise.all(_.map(views, view => this.remove(view, options)))\r\n      }\r\n    }).then(() => {\r\n      if (view) {\r\n        this.trigger('close', view, options)\r\n      } else {\r\n        _.map(views, view => this.trigger('close', view, options))\r\n      }\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @method alert\r\n   * @param {Object} [options]\r\n   * @returns {Promise}\r\n   */\r\n  alert (options) {\r\n    return new Promise((resolve, reject) => {\r\n      let view = new this.AlertView(options)\r\n      let promise = this.open(view, options)\r\n\r\n      this.trigger('before:alert', view, options)\r\n\r\n      view.on('confirm cancel', () => {\r\n        promise\r\n          .then(() => this.close(view, options))\r\n          .then(() => this.trigger('alert', null, view, options))\r\n          .then(() => resolve(), reject)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @method confirm\r\n   * @param {Object} [options]\r\n   * @returns {Promise}\r\n   */\r\n  confirm (options) {\r\n    return new Promise((resolve, reject) => {\r\n      let view = new this.ConfirmView(options)\r\n      let promise = this.open(view, options)\r\n\r\n      this.trigger('before:confirm', view, options)\r\n\r\n      let close = result => {\r\n        promise\r\n          .then(() => this.close(view, options))\r\n          .then(() => this.trigger('confirm', result, view, options))\r\n          .then(() => resolve(result), reject)\r\n      }\r\n\r\n      view.on({\r\n        confirm: () => close(true),\r\n        cancel: () => close(false)\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @method prompt\r\n   * @returns {Promise}\r\n   */\r\n  prompt (options) {\r\n    return new Promise((resolve, reject) => {\r\n      let view = new this.PromptView(options)\r\n      let promise = this.open(view, options)\r\n\r\n      this.trigger('before:prompt', view, options)\r\n\r\n      let close = result => {\r\n        promise\r\n          .then(() => this.close(view, options))\r\n          .then(() => this.trigger('prompt', result, view, options))\r\n          .then(() => resolve(result), reject)\r\n      }\r\n\r\n      view.on({\r\n        submit: text => close(text),\r\n        cancel: () => close()\r\n      })\r\n    })\r\n  },\r\n\r\n  dialog (view, options) {\r\n    if (!view) {\r\n      throw new Error('ModalService: no view option passed to dialog')\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let promise = this.open(view, options)\r\n\r\n      this.trigger('before:dialog', view, options)\r\n\r\n      let close = result => {\r\n        promise\r\n          .then(() => this.close(view, options))\r\n          .then(() => this.trigger('dialog', result, view, options))\r\n          .then(() => resolve(result), reject)\r\n      }\r\n\r\n      view.on({\r\n        submit: data => close(data),\r\n        cancel: () => close()\r\n      })\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @method isOpen\r\n   * @returns {Boolean}\r\n   */\r\n  isOpen () {\r\n    return !!this._isOpen\r\n  },\r\n\r\n  /**\r\n   * @abstract\r\n   * @method render\r\n   */\r\n  render () {},\r\n\r\n  /**\r\n   * @abstract\r\n   * @method remove\r\n   */\r\n  remove () {},\r\n\r\n  /**\r\n   * @abstract\r\n   * @method animateIn\r\n   */\r\n  animateIn () {},\r\n\r\n  /**\r\n   * @abstract\r\n   * @method animateSwap\r\n   */\r\n  animateSwap () {},\r\n\r\n  /**\r\n   * @abstract\r\n   * @method animateOut\r\n   */\r\n  animateOut () {}\r\n})\r\n\r\nexport default ModalService\r\n","import {Model} from 'backbone'\r\nimport {View} from 'backbone.marionette'\r\n\r\nconst defaultCaptions = {\r\n  ok: 'OK',\r\n  cancel: 'Cancel',\r\n  yes: 'Yes',\r\n  no: 'No'\r\n}\r\n\r\nconst ModalView = View.extend({\r\n  initialize (options = {}) {\r\n    this.model = new Model(options)\r\n  },\r\n\r\n  triggers: {\r\n    'click .btn-primary': {event: 'confirm', preventDefault: false, stopPropagation: false},\r\n    'click .btn-secondary': 'cancel',\r\n    'click .close': 'cancel'\r\n  },\r\n\r\n  events: {\r\n    submit: 'submit'\r\n  },\r\n\r\n  submit (e) {\r\n    e.preventDefault()\r\n    var val = this.$('input').val()\r\n    this.trigger('submit', val)\r\n  }\r\n})\r\n\r\n// simple renderer for deafult views\r\nconst renderer = (template, data) => template(data)\r\n\r\nconst LayoutView = ModalView.extend({\r\n  className: 'modal fade',\r\n\r\n  attributes: {\r\n    'tabindex': -1,\r\n    'role': 'dialog'\r\n  },\r\n\r\n  template: function renderLayout () {\r\n    return `\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\"></div>\r\n    </div>\r\n    `\r\n  }\r\n}).setRenderer(renderer)\r\n\r\nconst AlertView = ModalView.extend({\r\n  template: function renderAlert (data) {\r\n    return `\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\">${data.title}</h5>\r\n      <button type=\"button\" class=\"close\" aria-hidden=\"true\">&times;</button>      \r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <p>${data.text}</p>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-primary\">${data.ok || defaultCaptions.ok}</button>\r\n    </div>\r\n    `\r\n  }\r\n}).setRenderer(renderer)\r\n\r\nconst PromptView = ModalView.extend({\r\n  tagName: 'form',\r\n\r\n  template: function renderPrompt (data) {\r\n    return `\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\">${data.title}</h5>\r\n      <button type=\"button\" class=\"close\" aria-hidden=\"true\">&times;</button>      \r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label for=\"modal__input--prompt\">${data.text}</label>\r\n        <input id=\"modal__input--prompt\" class=\"form-control\" type=\"text\" value=\"${data.value || ''}\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\">${data.cancel || defaultCaptions.cancel}</button>\r\n      <button type=\"submit\" class=\"btn btn-primary\">${data.ok || defaultCaptions.ok}</button>\r\n    </div>\r\n    `\r\n  }\r\n}).setRenderer(renderer)\r\n\r\nconst ConfirmView = ModalView.extend({\r\n  template: function renderConfirm (data) {\r\n    return `\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\">${data.title}</h5>\r\n      <button type=\"button\" class=\"close\" aria-hidden=\"true\">&times;</button>      \r\n    </div>\r\n    \r\n    <div class=\"modal-body\">\r\n      <p>${data.text}</p>\r\n    </div>\r\n    \r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\">${data.no || defaultCaptions.no}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\">${data.yes || defaultCaptions.yes}</button>\r\n    </div>      \r\n    `\r\n  }\r\n\r\n}).setRenderer(renderer)\r\n\r\nexport {ModalView, AlertView, LayoutView, ConfirmView, PromptView, defaultCaptions}\r\n","import ModalService from './service'\r\nimport { View, Region, mergeOptions } from 'backbone.marionette'\r\nimport { ModalView, LayoutView, AlertView, PromptView, ConfirmView, defaultCaptions } from './bootstrap-views'\r\n\r\nconst viewClassesNames = ['LayoutView', 'AlertView', 'PromptView', 'ConfirmView']\r\n\r\nconst BootstrapModalService = ModalService.extend({\r\n  LayoutView,\r\n  AlertView,\r\n  PromptView,\r\n  ConfirmView,\r\n\r\n  _prepareViewClasses () {\r\n    viewClassesNames.forEach(className => {\r\n      let ViewClass = this[className]\r\n      if (typeof ViewClass !== 'function') {\r\n        throw new Error(`ModalService: expected ${className} to be a template function or View class`)\r\n      }\r\n      if (!(ViewClass.prototype instanceof View)) {\r\n        ViewClass = ModalView.extend({\r\n          template: ViewClass\r\n        })\r\n        this[className] = ViewClass\r\n      }\r\n    })\r\n  },\r\n\r\n  setup (options = {}) {\r\n    mergeOptions(this, options, viewClassesNames.concat(['el', 'container']))\r\n    this._prepareViewClasses()\r\n  },\r\n\r\n  start () {\r\n    const layout = this.layout = new this.LayoutView()\r\n\r\n    if (!this.container) {\r\n      if (!this.el) throw new Error('ModalService: container or el options must be defined')\r\n\r\n      this.container = new Region({\r\n        el: this.el\r\n      })\r\n    }\r\n    this.container.show(layout)\r\n\r\n    layout.$el.modal({\r\n      show: false,\r\n      backdrop: 'static'\r\n    })\r\n\r\n    layout.$el.on({\r\n      'shown.bs.modal': (e) => this.trigger('modal:show', e),\r\n      'hidden.bs.modal': (e) => this.trigger('modal:hide', e)\r\n    })\r\n\r\n    this.contentRegion = new Region({\r\n      el: layout.$('.modal-content')\r\n    })\r\n  },\r\n\r\n  render (view) {\r\n    this.contentRegion.show(view)\r\n  },\r\n\r\n  remove () {\r\n    this.contentRegion.empty()\r\n  },\r\n\r\n  animateIn () {\r\n    return new Promise(resolve => {\r\n      this.once('modal:show', resolve)\r\n      this.layout.$el.modal('show')\r\n    })\r\n  },\r\n\r\n  animateOut () {\r\n    return new Promise(resolve => {\r\n      this.once('modal:hide', resolve)\r\n      this.layout.$el.modal('hide')\r\n    })\r\n  }\r\n},\r\n// class methods\r\n{\r\n  setCaptions (captions = {}) {\r\n    Object.assign(defaultCaptions, captions)\r\n  }\r\n})\r\n\r\nexport default BootstrapModalService\r\n"],"names":["ModalService","Service","extend","views","prototype","constructor","apply","arguments","view","options","previousView","Promise","resolve","then","trigger","_isOpen","_","last","push","render","animateSwap","animateIn","map","without","animateOut","remove","all","reject","AlertView","promise","open","on","close","ConfirmView","result","PromptView","text","Error","data","defaultCaptions","ModalView","View","model","Model","event","preventDefault","stopPropagation","e","val","$","renderer","template","LayoutView","renderLayout","setRenderer","renderAlert","title","ok","renderPrompt","value","cancel","renderConfirm","no","yes","viewClassesNames","BootstrapModalService","forEach","ViewClass","className","concat","_prepareViewClasses","layout","container","el","Region","show","$el","modal","contentRegion","empty","once","captions","assign"],"mappings":";;;;;AAGA;;;AAGA,IAAMA,eAAeC,QAAQC,MAAR,CAAe;;;;;;UAAA,sBAMtB;WACH;YACC,MADD;aAEE,OAFF;aAGE,OAHF;eAII,SAJJ;cAKG,QALH;cAMG;KANV;GAPgC;;;;;;aAAA,yBAoBnB;SACRC,KAAL,GAAa,EAAb;;YAEQC,SAAR,CAAkBC,WAAlB,CAA8BC,KAA9B,CAAoC,IAApC,EAA0CC,SAA1C;GAvBgC;;;;;;;;MAAA,gBA+B5BC,IA/B4B,EA+BtBC,OA/BsB,EA+Bb;;;QACfC,qBAAJ;WACOC,QAAQC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;YAC7BC,OAAL,CAAa,aAAb,EAA4BN,IAA5B,EAAkCC,OAAlC;YACKM,OAAL,GAAe,IAAf;;qBAEeC,EAAEC,IAAF,CAAO,MAAKd,KAAZ,CAAf;YACKA,KAAL,CAAWe,IAAX,CAAgBV,IAAhB;;aAEO,MAAKW,MAAL,CAAYX,IAAZ,EAAkBC,OAAlB,CAAP;KAPK,EAQJI,IARI,CAQC,YAAM;UACRH,YAAJ,EAAkB;eACT,MAAKU,WAAL,CAAiBV,YAAjB,EAA+BF,IAA/B,EAAqCC,OAArC,CAAP;OADF,MAEO;eACE,MAAKY,SAAL,CAAeb,IAAf,EAAqBC,OAArB,CAAP;;KAZG,EAcJI,IAdI,CAcC,YAAM;YACPC,OAAL,CAAa,MAAb,EAAqBN,IAArB,EAA2BC,OAA3B;KAfK,CAAP;GAjCgC;;;;;;;;OAAA,iBAyD3BD,IAzD2B,EAyDrBC,OAzDqB,EAyDZ;;;QAChBC,qBAAJ;QACIP,cAAJ;;WAEOQ,QAAQC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;UAC9BL,IAAJ,EAAU;eACHM,OAAL,CAAa,cAAb,EAA6BN,IAA7B,EAAmCC,OAAnC;OADF,MAEO;UACHa,GAAF,CAAM,OAAKnB,KAAX,EAAkB;iBAAQ,OAAKW,OAAL,CAAa,cAAb,EAA6BN,IAA7B,EAAmCC,OAAnC,CAAR;SAAlB;;;aAGGM,OAAL,GAAe,KAAf;;UAEIP,IAAJ,EAAU;gBACA,OAAKL,KAAL,GAAaa,EAAEO,OAAF,CAAU,OAAKpB,KAAf,EAAsBK,IAAtB,CAArB;OADF,MAEO;gBACG,OAAKL,KAAb;eACKA,KAAL,GAAa,EAAb;;;qBAGaa,EAAEC,IAAF,CAAOd,KAAP,CAAf;;UAEIK,QAAQE,YAAZ,EAA0B;eACjB,OAAKU,WAAL,CAAiBZ,IAAjB,EAAuBE,YAAvB,EAAqCD,OAArC,CAAP;OADF,MAEO,IAAID,IAAJ,EAAU;eACR,OAAKgB,UAAL,CAAgBhB,IAAhB,EAAsBC,OAAtB,CAAP;OADK,MAEA,IAAIC,YAAJ,EAAkB;eAChB,OAAKc,UAAL,CAAgBd,YAAhB,EAA8BD,OAA9B,CAAP;;KAvBG,EAyBJI,IAzBI,CAyBC,YAAM;UACRL,IAAJ,EAAU;eACD,OAAKiB,MAAL,CAAYjB,IAAZ,EAAkBC,OAAlB,CAAP;OADF,MAEO;eACEE,QAAQe,GAAR,CAAYV,EAAEM,GAAF,CAAMnB,KAAN,EAAa;iBAAQ,OAAKsB,MAAL,CAAYjB,IAAZ,EAAkBC,OAAlB,CAAR;SAAb,CAAZ,CAAP;;KA7BG,EA+BJI,IA/BI,CA+BC,YAAM;UACRL,IAAJ,EAAU;eACHM,OAAL,CAAa,OAAb,EAAsBN,IAAtB,EAA4BC,OAA5B;OADF,MAEO;UACHa,GAAF,CAAMnB,KAAN,EAAa;iBAAQ,OAAKW,OAAL,CAAa,OAAb,EAAsBN,IAAtB,EAA4BC,OAA5B,CAAR;SAAb;;KAnCG,CAAP;GA7DgC;;;;;;;;OAAA,iBA0G3BA,OA1G2B,EA0GlB;;;WACP,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUe,MAAV,EAAqB;UAClCnB,OAAO,IAAI,OAAKoB,SAAT,CAAmBnB,OAAnB,CAAX;UACIoB,UAAU,OAAKC,IAAL,CAAUtB,IAAV,EAAgBC,OAAhB,CAAd;;aAEKK,OAAL,CAAa,cAAb,EAA6BN,IAA7B,EAAmCC,OAAnC;;WAEKsB,EAAL,CAAQ,gBAAR,EAA0B,YAAM;gBAE3BlB,IADH,CACQ;iBAAM,OAAKmB,KAAL,CAAWxB,IAAX,EAAiBC,OAAjB,CAAN;SADR,EAEGI,IAFH,CAEQ;iBAAM,OAAKC,OAAL,CAAa,OAAb,EAAsB,IAAtB,EAA4BN,IAA5B,EAAkCC,OAAlC,CAAN;SAFR,EAGGI,IAHH,CAGQ;iBAAMD,SAAN;SAHR,EAGyBe,MAHzB;OADF;KANK,CAAP;GA3GgC;;;;;;;;SAAA,mBA+HzBlB,OA/HyB,EA+HhB;;;WACT,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUe,MAAV,EAAqB;UAClCnB,OAAO,IAAI,OAAKyB,WAAT,CAAqBxB,OAArB,CAAX;UACIoB,UAAU,OAAKC,IAAL,CAAUtB,IAAV,EAAgBC,OAAhB,CAAd;;aAEKK,OAAL,CAAa,gBAAb,EAA+BN,IAA/B,EAAqCC,OAArC;;UAEIuB,QAAQ,SAARA,KAAQ,SAAU;gBAEjBnB,IADH,CACQ;iBAAM,OAAKmB,KAAL,CAAWxB,IAAX,EAAiBC,OAAjB,CAAN;SADR,EAEGI,IAFH,CAEQ;iBAAM,OAAKC,OAAL,CAAa,SAAb,EAAwBoB,MAAxB,EAAgC1B,IAAhC,EAAsCC,OAAtC,CAAN;SAFR,EAGGI,IAHH,CAGQ;iBAAMD,QAAQsB,MAAR,CAAN;SAHR,EAG+BP,MAH/B;OADF;;WAOKI,EAAL,CAAQ;iBACG;iBAAMC,MAAM,IAAN,CAAN;SADH;gBAEE;iBAAMA,MAAM,KAAN,CAAN;;OAFV;KAbK,CAAP;GAhIgC;;;;;;;QAAA,kBAwJ1BvB,OAxJ0B,EAwJjB;;;WACR,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUe,MAAV,EAAqB;UAClCnB,OAAO,IAAI,OAAK2B,UAAT,CAAoB1B,OAApB,CAAX;UACIoB,UAAU,OAAKC,IAAL,CAAUtB,IAAV,EAAgBC,OAAhB,CAAd;;aAEKK,OAAL,CAAa,eAAb,EAA8BN,IAA9B,EAAoCC,OAApC;;UAEIuB,QAAQ,SAARA,KAAQ,SAAU;gBAEjBnB,IADH,CACQ;iBAAM,OAAKmB,KAAL,CAAWxB,IAAX,EAAiBC,OAAjB,CAAN;SADR,EAEGI,IAFH,CAEQ;iBAAM,OAAKC,OAAL,CAAa,QAAb,EAAuBoB,MAAvB,EAA+B1B,IAA/B,EAAqCC,OAArC,CAAN;SAFR,EAGGI,IAHH,CAGQ;iBAAMD,QAAQsB,MAAR,CAAN;SAHR,EAG+BP,MAH/B;OADF;;WAOKI,EAAL,CAAQ;gBACE;iBAAQC,MAAMI,IAAN,CAAR;SADF;gBAEE;iBAAMJ,OAAN;;OAFV;KAbK,CAAP;GAzJgC;QAAA,kBA6K1BxB,IA7K0B,EA6KpBC,OA7KoB,EA6KX;;;QACjB,CAACD,IAAL,EAAW;YACH,IAAI6B,KAAJ,CAAU,+CAAV,CAAN;;WAEK,IAAI1B,OAAJ,CAAY,UAACC,OAAD,EAAUe,MAAV,EAAqB;UAClCE,UAAU,OAAKC,IAAL,CAAUtB,IAAV,EAAgBC,OAAhB,CAAd;;aAEKK,OAAL,CAAa,eAAb,EAA8BN,IAA9B,EAAoCC,OAApC;;UAEIuB,QAAQ,SAARA,KAAQ,SAAU;gBAEjBnB,IADH,CACQ;iBAAM,OAAKmB,KAAL,CAAWxB,IAAX,EAAiBC,OAAjB,CAAN;SADR,EAEGI,IAFH,CAEQ;iBAAM,OAAKC,OAAL,CAAa,QAAb,EAAuBoB,MAAvB,EAA+B1B,IAA/B,EAAqCC,OAArC,CAAN;SAFR,EAGGI,IAHH,CAGQ;iBAAMD,QAAQsB,MAAR,CAAN;SAHR,EAG+BP,MAH/B;OADF;;WAOKI,EAAL,CAAQ;gBACE;iBAAQC,MAAMM,IAAN,CAAR;SADF;gBAEE;iBAAMN,OAAN;;OAFV;KAZK,CAAP;GAjLgC;;;;;;;QAAA,oBAwMxB;WACD,CAAC,CAAC,KAAKjB,OAAd;GAzMgC;;;;;;;QAAA,oBAgNxB,EAhNwB;;;;;;;QAAA,oBAsNxB,EAtNwB;;;;;;;WAAA,uBA4NrB,EA5NqB;;;;;;;aAAA,yBAkOnB,EAlOmB;;;;;;;YAAA,wBAwOpB;CAxOK,CAArB;;ACHA,IAAMwB,kBAAkB;MAClB,IADkB;UAEd,QAFc;OAGjB,KAHiB;MAIlB;CAJN;;AAOA,IAAMC,YAAYC,KAAKvC,MAAL,CAAY;YAAA,wBACF;QAAdO,OAAc,uEAAJ,EAAI;;SACnBiC,KAAL,GAAa,IAAIC,KAAJ,CAAUlC,OAAV,CAAb;GAF0B;;;YAKlB;0BACc,EAACmC,OAAO,SAAR,EAAmBC,gBAAgB,KAAnC,EAA0CC,iBAAiB,KAA3D,EADd;4BAEgB,QAFhB;oBAGQ;GARU;;UAWpB;YACE;GAZkB;;QAAA,kBAepBC,CAfoB,EAejB;MACPF,cAAF;QACIG,MAAM,KAAKC,CAAL,CAAO,OAAP,EAAgBD,GAAhB,EAAV;SACKlC,OAAL,CAAa,QAAb,EAAuBkC,GAAvB;;CAlBc,CAAlB;;;AAuBA,IAAME,WAAW,SAAXA,QAAW,CAACC,QAAD,EAAWb,IAAX;SAAoBa,SAASb,IAAT,CAApB;CAAjB;;AAEA,IAAMc,aAAaZ,UAAUtC,MAAV,CAAiB;aACvB,YADuB;;cAGtB;gBACE,CAAC,CADH;YAEF;GALwB;;YAQxB,SAASmD,YAAT,GAAyB;;;CARlB,EAehBC,WAfgB,CAeJJ,QAfI,CAAnB;;AAiBA,IAAMtB,YAAYY,UAAUtC,MAAV,CAAiB;YACvB,SAASqD,WAAT,CAAsBjB,IAAtB,EAA4B;gFAGRA,KAAKkB,KAFjC,yJAOOlB,KAAKF,IAPZ,iHAWkDE,KAAKmB,EAAL,IAAWlB,gBAAgBkB,EAX7E;;CAFc,EAiBfH,WAjBe,CAiBHJ,QAjBG,CAAlB;;AAmBA,IAAMf,aAAaK,UAAUtC,MAAV,CAAiB;WACzB,MADyB;;YAGxB,SAASwD,YAAT,CAAuBpB,IAAvB,EAA6B;gFAGTA,KAAKkB,KAFjC,0NAQwClB,KAAKF,IAR7C,oGAS+EE,KAAKqB,KAAL,IAAc,EAT7F,gIAcoDrB,KAAKsB,MAAL,IAAerB,gBAAgBqB,MAdnF,yEAekDtB,KAAKmB,EAAL,IAAWlB,gBAAgBkB,EAf7E;;CAJe,EAuBhBH,WAvBgB,CAuBJJ,QAvBI,CAAnB;;AAyBA,IAAMjB,cAAcO,UAAUtC,MAAV,CAAiB;YACzB,SAAS2D,aAAT,CAAwBvB,IAAxB,EAA8B;gFAGVA,KAAKkB,KAFjC,6JAOOlB,KAAKF,IAPZ,uHAWoDE,KAAKwB,EAAL,IAAWvB,gBAAgBuB,EAX/E,yEAYkDxB,KAAKyB,GAAL,IAAYxB,gBAAgBwB,GAZ9E;;;CAFgB,EAmBjBT,WAnBiB,CAmBLJ,QAnBK,CAApB;;AC5FA,IAAMc,mBAAmB,CAAC,YAAD,EAAe,WAAf,EAA4B,YAA5B,EAA0C,aAA1C,CAAzB;;AAEA,IAAMC,wBAAwBjE,aAAaE,MAAb,CAAoB;wBAAA;sBAAA;wBAAA;0BAAA;;qBAAA,iCAMzB;;;qBACJgE,OAAjB,CAAyB,qBAAa;UAChCC,YAAY,MAAKC,SAAL,CAAhB;UACI,OAAOD,SAAP,KAAqB,UAAzB,EAAqC;cAC7B,IAAI9B,KAAJ,6BAAoC+B,SAApC,8CAAN;;UAEE,EAAED,UAAU/D,SAAV,YAA+BqC,IAAjC,CAAJ,EAA4C;oBAC9BD,UAAUtC,MAAV,CAAiB;oBACjBiE;SADA,CAAZ;cAGKC,SAAL,IAAkBD,SAAlB;;KATJ;GAP8C;OAAA,mBAqB3B;QAAd1D,OAAc,uEAAJ,EAAI;;iBACN,IAAb,EAAmBA,OAAnB,EAA4BuD,iBAAiBK,MAAjB,CAAwB,CAAC,IAAD,EAAO,WAAP,CAAxB,CAA5B;SACKC,mBAAL;GAvB8C;OAAA,mBA0BvC;;;QACDC,SAAS,KAAKA,MAAL,GAAc,IAAI,KAAKnB,UAAT,EAA7B;;QAEI,CAAC,KAAKoB,SAAV,EAAqB;UACf,CAAC,KAAKC,EAAV,EAAc,MAAM,IAAIpC,KAAJ,CAAU,uDAAV,CAAN;;WAETmC,SAAL,GAAiB,IAAIE,MAAJ,CAAW;YACtB,KAAKD;OADM,CAAjB;;SAIGD,SAAL,CAAeG,IAAf,CAAoBJ,MAApB;;WAEOK,GAAP,CAAWC,KAAX,CAAiB;YACT,KADS;gBAEL;KAFZ;;WAKOD,GAAP,CAAW7C,EAAX,CAAc;wBACM,sBAACgB,CAAD;eAAO,OAAKjC,OAAL,CAAa,YAAb,EAA2BiC,CAA3B,CAAP;OADN;yBAEO,uBAACA,CAAD;eAAO,OAAKjC,OAAL,CAAa,YAAb,EAA2BiC,CAA3B,CAAP;;KAFrB;;SAKK+B,aAAL,GAAqB,IAAIJ,MAAJ,CAAW;UAC1BH,OAAOtB,CAAP,CAAS,gBAAT;KADe,CAArB;GAhD8C;QAAA,kBAqDxCzC,IArDwC,EAqDlC;SACPsE,aAAL,CAAmBH,IAAnB,CAAwBnE,IAAxB;GAtD8C;QAAA,oBAyDtC;SACHsE,aAAL,CAAmBC,KAAnB;GA1D8C;WAAA,uBA6DnC;;;WACJ,IAAIpE,OAAJ,CAAY,mBAAW;aACvBqE,IAAL,CAAU,YAAV,EAAwBpE,OAAxB;aACK2D,MAAL,CAAYK,GAAZ,CAAgBC,KAAhB,CAAsB,MAAtB;KAFK,CAAP;GA9D8C;YAAA,wBAoElC;;;WACL,IAAIlE,OAAJ,CAAY,mBAAW;aACvBqE,IAAL,CAAU,YAAV,EAAwBpE,OAAxB;aACK2D,MAAL,CAAYK,GAAZ,CAAgBC,KAAhB,CAAsB,MAAtB;KAFK,CAAP;;CArE0B;;AA4E9B;aAAA,yBAC8B;QAAfI,QAAe,uEAAJ,EAAI;;WACnBC,MAAP,CAAc3C,eAAd,EAA+B0C,QAA/B;;CA9E0B,CAA9B;;;;"}